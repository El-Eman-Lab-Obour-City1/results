<?php
// ุชูุนูู ุงูุชูุงุฑูุฑ ุนู ุงูุฃุฎุทุงุก
error_reporting(E_ALL);
ini_set('display_errors', 1);

// ุฏุงูุฉ ูุชุณุฌูู ุงูุฃุฎุทุงุก
function logError($message) {
    $logFile = 'error_log.txt';
    $timestamp = date('Y-m-d H:i:s');
    file_put_contents($logFile, "[$timestamp] $message\n", FILE_APPEND);
}

$dataFile = "data.json";
$uploadDir = "uploads/";

// ุชุญููู ุจูุงูุงุช ุงููุฑุถู ูุน ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก
if (file_exists($dataFile)) {
    $content = file_get_contents($dataFile);
    if ($content === false) {
        die(json_encode(['status' => 'error', 'message' => 'โ ูุง ูููู ูุฑุงุกุฉ ููู ุงูุจูุงูุงุช']));
    }
    $patients = json_decode($content, true);
    if (json_last_error() !== JSON_ERROR_NONE) {
        die(json_encode(['status' => 'error', 'message' => 'โ ููู ุงูุจูุงูุงุช ุชุงูู: '.json_last_error_msg()]));
    }
    
    // ูุฑุฒ ุงููุฑุถู ุญุณุจ ุชุงุฑูุฎ ุงูุฅุถุงูุฉ (ุงูุฃุญุฏุซ ุฃููุงู)
    usort($patients, function($a, $b) {
        $dateA = isset($a['added_date']) ? strtotime($a['added_date']) : 0;
        $dateB = isset($b['added_date']) ? strtotime($b['added_date']) : 0;
        return $dateB - $dateA;
    });
} else {
    $patients = [];
}

$message = "";
$editMode = false;
$patientToEdit = null;
$searchQuery = "";

// ูุนุงูุฌุฉ ุทูุจ ุงูุจุญุซ
if (isset($_GET['search'])) {
    $searchQuery = trim($_GET['search']);
}

// ูุนุงูุฌุฉ ุทูุจ ุญุฐู ุงููุฑูุถ
if (isset($_GET['delete_patient'])) {
    try {
        $phoneToDelete = $_GET['delete_patient'];
        $found = false;
        
        foreach ($patients as $index => $patient) {
            if ($patient['phone'] === $phoneToDelete) {
                // ุญุฐู ูููุงุช PDF ุงููุฑุชุจุทุฉ ุจุงููุฑูุถ ุฃููุงู
                foreach ($patient['tests'] as $test) {
                    if (file_exists($test['file'])) {
                        if (!unlink($test['file'])) {
                            logError("Failed to delete file: " . $test['file']);
                        }
                    }
                }
                // ุญุฐู ุงููุฑูุถ ูู ุงููุตูููุฉ
                unset($patients[$index]);
                $found = true;
                break;
            }
        }
        
        if ($found) {
            // ุฅุนุงุฏุฉ ุชุฑููู ุงููุตูููุฉ
            $patients = array_values($patients);
            // ุญูุธ ุงูุชุบููุฑุงุช
            if (file_put_contents($dataFile, json_encode($patients, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE))) {
                echo json_encode(['status' => 'success', 'message' => 'โ ุชู ุญุฐู ุงููุฑูุถ ุจูุฌุงุญ']);
            } else {
                logError("Failed to save data after deletion");
                echo json_encode(['status' => 'error', 'message' => 'โ ูุดู ูู ุญูุธ ุงูุจูุงูุงุช ุจุนุฏ ุงูุญุฐู']);
            }
        } else {
            echo json_encode(['status' => 'error', 'message' => 'โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุฑูุถ']);
        }
        exit();
    } catch (Exception $e) {
        logError("Delete patient error: " . $e->getMessage());
        echo json_encode(['status' => 'error', 'message' => 'โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุญุฐู ุงููุฑูุถ']);
        exit();
    }
}

// ูุนุงูุฌุฉ ุทูุจ ุญุฐู ููู ูุนูู
if (isset($_GET['delete_file'])) {
    try {
        $phone = $_GET['phone'];
        $fileToDelete = $_GET['delete_file'];
        $found = false;
        
        foreach ($patients as &$patient) {
            if ($patient['phone'] === $phone) {
                foreach ($patient['tests'] as $index => $test) {
                    if ($test['file'] === $fileToDelete) {
                        // ุญุฐู ุงูููู ุงููุนูู ูู ุงูุณูุฑูุฑ
                        if (file_exists($fileToDelete)) {
                            if (!unlink($fileToDelete)) {
                                logError("Failed to delete file: " . $fileToDelete);
                            }
                        }
                        // ุญุฐู ุงูููู ูู ูุตูููุฉ ุงูุงุฎุชุจุงุฑุงุช
                        unset($patient['tests'][$index]);
                        // ุฅุนุงุฏุฉ ุชุฑููู ุงููุตูููุฉ
                        $patient['tests'] = array_values($patient['tests']);
                        $found = true;
                        break 2;
                    }
                }
            }
        }
        
        if ($found) {
            // ุญูุธ ุงูุชุบููุฑุงุช
            if (file_put_contents($dataFile, json_encode($patients, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE))) {
                echo json_encode(['status' => 'success', 'message' => 'โ ุชู ุญุฐู ุงูููู ุจูุฌุงุญ']);
            } else {
                logError("Failed to save data after file deletion");
                echo json_encode(['status' => 'error', 'message' => 'โ ูุดู ูู ุญูุธ ุงูุจูุงูุงุช ุจุนุฏ ุญุฐู ุงูููู']);
            }
        } else {
            echo json_encode(['status' => 'error', 'message' => 'โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงูููู']);
        }
        exit();
    } catch (Exception $e) {
        logError("Delete file error: " . $e->getMessage());
        echo json_encode(['status' => 'error', 'message' => 'โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุญุฐู ุงูููู']);
        exit();
    }
}

// ูุนุงูุฌุฉ ุทูุจ ุชุนุฏูู ุงููุฑูุถ
if (isset($_GET['edit_patient'])) {
    $phoneToEdit = $_GET['edit_patient'];
    foreach ($patients as $patient) {
        if ($patient['phone'] === $phoneToEdit) {
            $patientToEdit = $patient;
            $editMode = true;
            break;
        }
    }
}

// ูุนุงูุฌุฉ ุทูุจ ุชุญุฏูุซ ุญุงูุฉ ุงูุฏูุน
if (isset($_GET['toggle_payment'])) {
    try {
        $phone = $_GET['toggle_payment'];
        $found = false;
        
        foreach ($patients as &$patient) {
            if ($patient['phone'] === $phone) {
                $patient['is_paid'] = !$patient['is_paid'];
                $newStatus = $patient['is_paid'];
                $found = true;
                break;
            }
        }
        
        if ($found) {
            if (file_put_contents($dataFile, json_encode($patients, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE))) {
                echo json_encode([
                    'status' => 'success', 
                    'message' => 'โ ุชู ุชุญุฏูุซ ุญุงูุฉ ุงูุฏูุน',
                    'is_paid' => $newStatus,
                    'new_text' => $newStatus ? 'ุฅูุบุงุก ุงูุฏูุน' : 'ุชู ุงูุฏูุน',
                    'new_class' => $newStatus ? 'btn-warning' : 'btn-success'
                ]);
            } else {
                logError("Failed to save payment status");
                echo json_encode(['status' => 'error', 'message' => 'โ ูุดู ูู ุญูุธ ุญุงูุฉ ุงูุฏูุน']);
            }
        } else {
            echo json_encode(['status' => 'error', 'message' => 'โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุฑูุถ']);
        }
        exit();
    } catch (Exception $e) {
        logError("Toggle payment error: " . $e->getMessage());
        echo json_encode(['status' => 'error', 'message' => 'โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุญุฏูุซ ุญุงูุฉ ุงูุฏูุน']);
        exit();
    }
}

// ุฏุงูุฉ ูุฅุถุงูุฉ ุฑูุฒ ุงูุฏููุฉ ุฅุฐุง ูู ููู ููุฌูุฏุงู
function formatPhoneNumber($phone) {
    try {
        $phone = preg_replace('/[^0-9]/', '', $phone);
        
        if (empty($phone)) {
            return '';
        }
        
        // ุฅุฐุง ุจุฏุฃ ุงูุฑูู ุจู 0ุ ูุณุชุจุฏููุง ุจู +20
        if (substr($phone, 0, 1) === '0') {
            $phone = '+20' . substr($phone, 1);
        }
        // ุฅุฐุง ูุงู ุงูุฑูู ูุจุฏุฃ ุจู 20 ุจุฏูู +ุ ูุถูู +
        elseif (substr($phone, 0, 2) === '20') {
            $phone = '+' . $phone;
        }
        // ุฅุฐุง ูู ููู ููุงู ุฑูุฒ ุฏููุฉ ูุทููุงูุ ูุถูู +20
        elseif (substr($phone, 0, 1) !== '+') {
            $phone = '+20' . $phone;
        }
        
        return $phone;
    } catch (Exception $e) {
        logError("Format phone error: " . $e->getMessage());
        return $phone;
    }
}

// ูุนุงูุฌุฉ ุทูุจ ุฅุฑุณุงู ุนุจุฑ ุงููุงุชุณุงุจ
if (isset($_GET['send_whatsapp'])) {
    try {
        $phone = $_GET['send_whatsapp'];
        $patient = null;
        
        foreach ($patients as $p) {
            if ($p['phone'] === $phone) {
                $patient = $p;
                break;
            }
        }
        
        if ($patient) {
            $whatsappNumber = formatPhoneNumber($patient['phone']);
            // ุชุบููุฑ ุฑุณุงูุฉ ุงููุงุชุณุงุจ ููุง ุฅูู ุงููุต ุงููุทููุจ
            $message = "ุงูุณูุงู ุนูููู ูุฑุญูู ุงููู ูุจุฑูุงุชู\nุชู ุงูุงูุชูุงุก ูู ุงูุชุญุงููู ุงูุทุจูุฉ ุงูุฎุงุตุฉ ุจูู\nูุนูู ุงูุงููุงู ูุชููู ููู ุฏูุงู ุงูุตุญุฉ ูุงูุนุงููุฉ\nููููู ุณุนูุฏ ๐ธ๐น๐ธ";
            $whatsappUrl = "https://wa.me/$whatsappNumber?text=" . urlencode($message);
            echo json_encode(['status' => 'redirect', 'url' => $whatsappUrl]);
        } else {
            echo json_encode(['status' => 'error', 'message' => 'โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุฑูุถ']);
        }
        exit();
    } catch (Exception $e) {
        logError("Whatsapp send error: " . $e->getMessage());
        echo json_encode(['status' => 'error', 'message' => 'โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฅุฑุณุงู ูุงุชุณุงุจ']);
        exit();
    }
}

// ูุนุงูุฌุฉ ุทูุจ ุฅุฑุณุงู SMS
if (isset($_GET['send_sms'])) {
    try {
        $phone = $_GET['send_sms'];
        $patient = null;
        $found = false;
        
        foreach ($patients as $p) {
            if ($p['phone'] === $phone) {
                $patient = $p;
                break;
            }
        }
        
        if ($patient) {
            $smsMessage = "ุนููููุง ุงูุนุฒูุฒ ุจุฑุฌุงุก ุงูุชูุฌู ุงูู ุงููุนูู ูุงุณุชูุงู ุงููุชุงุฆุฌ ุฃู ุงูุฏุฎูู ุงูู ุงู Mobile App ุงูุฎุงุต ุจุงููุนูู ูุชุณุฌูู ุงูุฏุฎูู ูุฑุคูุฉ ุงููุชุงุฆุฌ ุงูุฎุงุตู ุจู";
            
            foreach ($patients as &$p) {
                if ($p['phone'] === $phone) {
                    $p['sms_message'] = $smsMessage;
                    $p['send_sms'] = true;
                    $found = true;
                    break;
                }
            }
            
            if ($found) {
                if (file_put_contents($dataFile, json_encode($patients, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE))) {
                    echo json_encode(['status' => 'success', 'message' => 'โ ุชู ุฅุนุฏุงุฏ ุฑุณุงูุฉ SMS ููุงุฑุณุงู: ' . $smsMessage]);
                } else {
                    logError("Failed to save SMS data");
                    echo json_encode(['status' => 'error', 'message' => 'โ ูุดู ูู ุญูุธ ุจูุงูุงุช SMS']);
                }
            }
        } else {
            echo json_encode(['status' => 'error', 'message' => 'โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุฑูุถ']);
        }
        exit();
    } catch (Exception $e) {
        logError("SMS send error: " . $e->getMessage());
        echo json_encode(['status' => 'error', 'message' => 'โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฅุฑุณุงู SMS']);
        exit();
    }
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        // ุงูุชุญูู ูู ูุฌูุฏ ูุฌูุฏ ุงูุชุญููู
        if (!is_dir($uploadDir)) {
            if (!mkdir($uploadDir, 0777, true)) {
                echo json_encode(['status' => 'error', 'message' => 'โ ูุง ูููู ุฅูุดุงุก ูุฌูุฏ ุงูุชุญููู']);
                exit();
            }
        }

        if (!is_writable($uploadDir)) {
            echo json_encode(['status' => 'error', 'message' => 'โ ูุฌูุฏ ุงูุชุญููู ุบูุฑ ูุงุจู ูููุชุงุจุฉ']);
            exit();
        }

        $isPaid = isset($_POST["is_paid"]) ? (bool)$_POST["is_paid"] : false;
        $sendToWhatsapp = isset($_POST["send_to_whatsapp"]) ? true : false;
        $sendSMS = isset($_POST["send_sms"]) ? true : false;
        $smsMessage = isset($_POST["sms_message"]) ? trim($_POST["sms_message"]) : '';

        $patientName = isset($_POST["patient_name"]) ? trim($_POST["patient_name"]) : '';
        $phone = isset($_POST["phone"]) ? trim($_POST["phone"]) : '';
        $testDate = isset($_POST["test_date"]) ? $_POST["test_date"] : date('Y-m-d');

        if (empty($patientName) || empty($phone)) {
            echo json_encode(['status' => 'error', 'message' => 'โ ุงุณู ุงููุฑูุถ ูุฑูู ุงููุงุชู ูุทููุจุงู']);
            exit();
        }

        $files = $_FILES["pdf_files"];
        $uploadSuccess = true;
        $uploadedFiles = [];

        // ูุนุงูุฌุฉ ุงููููุงุช ุงููุฑููุนุฉ
        if (isset($files['name']) && is_array($files['name'])) {
            for ($i = 0; $i < count($files['name']); $i++) {
                if ($files['error'][$i] !== UPLOAD_ERR_OK) {
                    $errorMsg = getUploadErrorMsg($files['error'][$i]);
                    echo json_encode(['status' => 'error', 'message' => 'โ ' . $errorMsg]);
                    exit();
                }

                $fileType = strtolower(pathinfo($files["name"][$i], PATHINFO_EXTENSION));
                if ($fileType !== "pdf") {
                    echo json_encode(['status' => 'error', 'message' => 'โ ุงูููู ูุฌุจ ุฃู ูููู PDF ููุท']);
                    exit();
                }

                $newFileName = preg_replace('/\s+/', '_', $patientName) . "_" . time() . "_" . $i . ".pdf";
                $destination = $uploadDir . $newFileName;

                if (!move_uploaded_file($files["tmp_name"][$i], $destination)) {
                    $error = error_get_last();
                    logError("Failed to move uploaded file: " . ($error ? $error['message'] : 'Unknown error'));
                    echo json_encode(['status' => 'error', 'message' => 'โ ูุดู ูู ุฑูุน ุงูููู']);
                    exit();
                }

                $uploadedFiles[] = [
                    "date" => $testDate,
                    "file" => $destination
                ];
            }
        }

        if ($uploadSuccess && !empty($uploadedFiles)) {
            $foundIndex = null;
            foreach ($patients as $index => $p) {
                if ($p["phone"] === $phone) {
                    $foundIndex = $index;
                    break;
                }
            }

            if ($foundIndex !== null) {
                // ุชุญุฏูุซ ุจูุงูุงุช ุงููุฑูุถ
                $patients[$foundIndex]["name"] = $patientName;
                $patients[$foundIndex]["is_paid"] = $isPaid;
                $patients[$foundIndex]["send_to_whatsapp"] = $sendToWhatsapp;
                $patients[$foundIndex]["send_sms"] = $sendSMS;
                $patients[$foundIndex]["sms_message"] = $smsMessage;
                
                foreach ($uploadedFiles as $file) {
                    $patients[$foundIndex]["tests"][] = $file;
                }
            } else {
                $patients[] = [
                    "name" => $patientName,
                    "phone" => $phone,
                    "is_paid" => $isPaid,
                    "send_to_whatsapp" => $sendToWhatsapp,
                    "send_sms" => $sendSMS,
                    "sms_message" => $smsMessage,
                    "tests" => $uploadedFiles,
                    "added_date" => date('Y-m-d H:i:s') // ุฅุถุงูุฉ ุชุงุฑูุฎ ุงูุฅุถุงูุฉ
                ];
            }

            if (file_put_contents($dataFile, json_encode($patients, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE))) {
                $response = ['status' => 'success', 'message' => 'โ ุชู ุฑูุน ุงููููุงุช ูุชุญุฏูุซ ุงูุจูุงูุงุช'];
                
                if ($sendToWhatsapp) {
                    $whatsappNumber = formatPhoneNumber($phone);
                    // ุชุบููุฑ ุฑุณุงูุฉ ุงููุงุชุณุงุจ ููุง ุฅูู ุงููุต ุงููุทููุจ
                    $message = "ุงูุณูุงู ุนูููู ูุฑุญูู ุงููู ูุจุฑูุงุชู\nุชู ุงูุงูุชูุงุก ูู ุงูุชุญุงููู ุงูุทุจูุฉ ุงูุฎุงุตุฉ ุจูู\nูุนูู ุงูุงููุงู ูุชููู ููู ุฏูุงู ุงูุตุญุฉ ูุงูุนุงููุฉ\nููููู ุณุนูุฏ ๐ธ๐น๐ธ";
                    $whatsappUrl = "https://wa.me/$whatsappNumber?text=" . urlencode($message);
                    $response['redirect'] = $whatsappUrl;
                }
                
                echo json_encode($response);
            } else {
                logError("Failed to save patient data");
                echo json_encode(['status' => 'error', 'message' => 'โ ูุดู ูู ุญูุธ ุจูุงูุงุช ุงููุฑูุถ']);
            }
        } else {
            echo json_encode(['status' => 'error', 'message' => 'โ ูู ูุชู ุฑูุน ุฃู ูููุงุช']);
        }
        exit();
    } catch (Exception $e) {
        logError("Form submission error: " . $e->getMessage());
        echo json_encode(['status' => 'error', 'message' => 'โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุงูุจูุงูุงุช']);
        exit();
    }
}

// ุฏุงูุฉ ููุญุตูู ุนูู ุฑุณุงูุฉ ุฎุทุฃ ุงูุฑูุน
function getUploadErrorMsg($errorCode) {
    switch ($errorCode) {
        case UPLOAD_ERR_INI_SIZE:
            return 'ุญุฌู ุงูููู ูุชุฌุงูุฒ ุงูุญุฏ ุงููุณููุญ ุจู ูู ุงูุณูุฑูุฑ';
        case UPLOAD_ERR_FORM_SIZE:
            return 'ุญุฌู ุงูููู ูุชุฌุงูุฒ ุงูุญุฏ ุงููุณููุญ ุจู ูู ุงููููุฐุฌ';
        case UPLOAD_ERR_PARTIAL:
            return 'ุชู ุฑูุน ุฌุฒุก ูู ุงูููู ููุท';
        case UPLOAD_ERR_NO_FILE:
            return 'ูู ูุชู ุฑูุน ุฃู ููู';
        case UPLOAD_ERR_NO_TMP_DIR:
            return 'ุงููุฌูุฏ ุงููุคูุช ุบูุฑ ููุฌูุฏ';
        case UPLOAD_ERR_CANT_WRITE:
            return 'ูุดู ูู ูุชุงุจุฉ ุงูููู ุนูู ุงููุฑุต';
        case UPLOAD_ERR_EXTENSION:
            return 'ุฑูุน ุงูููู ุชููู ุจูุงุณุทุฉ ุฅุถุงูุฉ';
        default:
            return 'ุฎุทุฃ ุบูุฑ ูุนุฑูู ุฃุซูุงุก ุฑูุน ุงูููู';
    }
}

// ุชุตููุฉ ุงููุฑุถู ุจูุงุก ุนูู ุงุณุชุนูุงู ุงูุจุญุซ ุฅุฐุง ูุฌุฏ
$filteredPatients = $patients;
if (!empty($searchQuery)) {
    $filteredPatients = array_filter($patients, function($patient) use ($searchQuery) {
        return stripos($patient['name'], $searchQuery) !== false || 
               stripos($patient['phone'], $searchQuery) !== false;
    });
}

?>

<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ุฑูุน ูุชูุฌุฉ ุชุญููู</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Tajawal', sans-serif;
        }
        .header {
            background: linear-gradient(135deg, #5a1f62 0%, #5a1f62 100%);
            color: white;
            padding: 2rem 0;
            border-radius: 0 0 10px 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .upload-form {
            background: white;
            padding: 2rem;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 2rem;
        }
        .results-table {
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }
        .table th {
            background-color: #f1f7fd;
            font-weight: 600;
        }
        .btn-primary {
            background-color: #ef71aa;
            border-color: #ef71aa;
        }
        .btn-primary:hover {
            background-color: #fa4c9a;
            border-color: #fa4c9a;
        }
        .btn-danger {
            background-color: #dc3545;
            border-color: #dc3545;
        }